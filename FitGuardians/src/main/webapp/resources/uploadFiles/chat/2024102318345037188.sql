--DB 스크립트

-----------------삭제------------------
--접속유저의 모든테이블 및 제약조건 삭제
BEGIN
    FOR C IN (SELECT TABLE_NAME FROM USER_TABLES) LOOP
    EXECUTE IMMEDIATE ('DROP TABLE '||C.TABLE_NAME||' CASCADE CONSTRAINTS');
    END LOOP;
END;
/
--접속유저의 모든 시퀀스 삭제
BEGIN
FOR C IN (SELECT * FROM USER_SEQUENCES) LOOP
  EXECUTE IMMEDIATE 'DROP SEQUENCE '||C.SEQUENCE_NAME;
END LOOP;
END;
/
--접속유저의 모든 뷰 삭제
BEGIN
FOR C IN (SELECT * FROM USER_VIEWS) LOOP
  EXECUTE IMMEDIATE 'DROP VIEW '||C.VIEW_NAME;
END LOOP;
END;
/
--접속유저의 모든 트리거 삭제
BEGIN
FOR C IN (SELECT * FROM USER_TRIGGERS) LOOP
  EXECUTE IMMEDIATE 'DROP TRIGGER '||C.TRIGGER_NAME;
END LOOP;
END;
/

------------------------------- 유저 테이블---------------------------------------
CREATE TABLE MEMBER (
    USER_NO NUMBER NOT NULL CONSTRAINT PK_MEMBER PRIMARY KEY,  -- 회원번호
    USER_ID VARCHAR2(30) NOT NULL,  -- 회원아이디
    USER_PWD VARCHAR2(100) NOT NULL,  -- 회원비밀번호
    USER_NAME VARCHAR2(30) NOT NULL,  -- 회원이름
    EMAIL VARCHAR2(100) NOT NULL,  -- 이메일
    PHONE VARCHAR2(13),  -- 전화번호
    GENDER VARCHAR2(1),  -- 성별
    AGE NUMBER,  -- 나이
    ADDRESS VARCHAR2(100),  -- 주소
    ENROLL_DATE DATE DEFAULT SYSDATE,  -- 가입일
    USER_LEVEL NUMBER,  -- 1 트레이너, 2회원
    PT VARCHAR2(30),  -- 담당트레이너
    STATUS VARCHAR2(1) DEFAULT 'Y',  -- 상태 (Y, N)
    API VARCHAR2(100),  -- API 로그인 키
    QR VARCHAR2(300) NOT NULL,  -- QR코드 발급 후 저장 경로
    PROFILE_PIC VARCHAR2(300),  -- 회원 프로필 사진
    MEMBERSHIP VARCHAR2(30),  -- 회원이 소유한 회원권
    PT_TIME NUMBER DEFAULT 0 NOT NULL -- PT횟수
);

COMMENT ON COLUMN MEMBER.USER_NO IS '회원번호';
COMMENT ON COLUMN MEMBER.USER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.USER_PWD IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.USER_NAME IS '회원이름';
COMMENT ON COLUMN MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.GENDER IS '성별';
COMMENT ON COLUMN MEMBER.AGE IS '나이';
COMMENT ON COLUMN MEMBER.ADDRESS IS '주소';
COMMENT ON COLUMN MEMBER.ENROLL_DATE IS '가입일';
COMMENT ON COLUMN MEMBER.USER_LEVEL IS '1 트레이너, 2회원';
COMMENT ON COLUMN MEMBER.PT IS '담당트레이너';
COMMENT ON COLUMN MEMBER.STATUS IS 'Y, N';
COMMENT ON COLUMN MEMBER.API IS 'API 로그인 키';
COMMENT ON COLUMN MEMBER.QR IS 'QR코드 발급 후 저장 경로';
COMMENT ON COLUMN MEMBER.PROFILE_PIC IS '회원 프로필 사진';
COMMENT ON COLUMN MEMBER.MEMBERSHIP IS '회원이 소유한 회원권';

--ALTER TABLE member
--ADD pt_time NUMBER DEFAULT 0 NOT NULL;

-- 유저 번호 시퀀스
CREATE SEQUENCE SEQ_MNO NOCACHE;

-----------------------------신체변화정보----------------------------------------------
CREATE TABLE BODY_INFO (
    BODY_INFO_NO NUMBER NOT NULL,   -- 신체변화 고유번호
    USER_ID VARCHAR(300) NOT NULL,               -- 회원아이디
    MEASURE_DATE DATE DEFAULT SYSDATE NOT NULL,  -- 측정일
    BMI NUMBER,                                  -- BMI
    FAT NUMBER,                               -- 체지방량
    SMM NUMBER,                                -- 골격근량
    BI_STATUS VARCHAR2(1) DEFAULT 'Y'                             -- 상태(Y,N)
);

COMMENT ON COLUMN BODY_INFO.BODY_INFO_NO IS '신체변화번호';
COMMENT ON COLUMN BODY_INFO.USER_ID IS '회원아이디';
COMMENT ON COLUMN BODY_INFO.MEASURE_DATE IS '측정일';
COMMENT ON COLUMN BODY_INFO.BMI IS '체질량지수';
COMMENT ON COLUMN BODY_INFO.FAT IS '체지방량';
COMMENT ON COLUMN BODY_INFO.SMM IS '골격근량';
COMMENT ON COLUMN BODY_INFO.BI_STATUS IS '상태(Y,N)';

CREATE SEQUENCE SEQ_BF_NO NOCACHE;

----------------------------------회원 추가 정보-----------------------------------
-- 회원추가정보 테이블
CREATE TABLE MEMBER_INFO(
    USER_NO NUMBER PRIMARY KEY, --회원번호
    HEIGHT NUMBER, --회원키
    WEIGHT NUMBER, --몸무게
    DISEASE VARCHAR2(100), --기저질환
    GOAL VARCHAR2(100), --운동목표
    CONSTRAINT FK_USER_NO FOREIGN KEY (USER_NO) REFERENCES MEMBER(USER_NO) ON DELETE CASCADE 
);
COMMENT ON COLUMN MEMBER_INFO.USER_NO IS '회원번호';
COMMENT ON COLUMN MEMBER_INFO.HEIGHT IS '회원키';
COMMENT ON COLUMN MEMBER_INFO.WEIGHT IS '몸무게';
COMMENT ON COLUMN MEMBER_INFO.DISEASE IS '기저질환';
COMMENT ON COLUMN MEMBER_INFO.GOAL IS '운동목표';

---------------------------출석 sql-------------------------------------

create table qrInfo (
    qr_no number constraint qr_pk PRIMARY key,
    id varchar2(30),
   type varchar2(30),
   created_at varchar2(100),
   valid_until varchar2(100),
   attendance varchar2(30),
   status varchar2(30) DEFAULT 'Y', -- 유효 여부
    att_status varchar2(30) -- 출결 상태
);

create sequence seq_qno nocache;

COMMENT ON COLUMN qrInfo.qr_no IS 'QR 코드 고유 번호';
COMMENT ON COLUMN qrInfo.id IS '사용자 ID';
COMMENT ON COLUMN qrInfo.type IS '사용자 타입';
COMMENT ON COLUMN qrInfo.created_at IS '생성 일시';
COMMENT ON COLUMN qrInfo.valid_until IS '유효 기간';
COMMENT ON COLUMN qrInfo.attendance IS '출석 정보';
COMMENT ON COLUMN qrInfo.status IS '유효 여부 (기본값: Y)';
COMMENT ON COLUMN qrInfo.att_status IS '출결 상태';


----------------------------식단 sql---------------------------------------

--식단 sql

create table mealPlan(
    send_id varchar2(50) not null,
    get_id varchar2(50) not null,
    food_code varchar2(30) ,
    food_name varchar2(50),
    carbs number ,
    fat number,
    protein number,
    kcal number,
    sugar number,
    meal_date varchar2(30),
    meal_msg VARCHAR2(500),
    meal_remsg VARCHAR2(500),
    msg_type VARCHAR2(5)
    );
      
COMMENT ON COLUMN mealPlan.send_USER is '보낸 강사 번호';
COMMENT ON COLUMN mealPlan.get_no is '받는 회원 번호';
COMMENT ON COLUMN mealPlan.food_code is '음식 코드';
COMMENT ON COLUMN mealPlan.food_name is '음식명';
COMMENT ON COLUMN mealPlan.carbs is '탄수화물';
COMMENT ON COLUMN mealPlan.fat is '지방';
COMMENT ON COLUMN mealPlan.protein is '단백질';
COMMENT ON COLUMN mealPlan.kcal is '칼로리';
COMMENT ON COLUMN mealPlan.sugar is '당류';
COMMENT ON COLUMN mealPlan.meal_date is '식단 날짜';
COMMENT ON COLUMN mealPlan.meal_msg is '식단 한마디';
COMMENT ON COLUMN mealPlan.meal_remsg is '식단 답장';
COMMENT ON COLUMN mealPlan.msg_type is '식단 누가보내는지(트레이너 T 회원 S)';

---------------------운동 관련 SCRIPT------------------------------------
-- AI 플랜

CREATE TABLE EXERCISE_PLAN (
    AI_EXERCISE_NO NUMBER NOT NULL CONSTRAINT PK_EXERCISE_PLAN PRIMARY KEY,
    USER_NO NUMBER NOT NULL,
    EXERCISE_GOAL VARCHAR2(300) NULL,
    FITNESS_LEVEL VARCHAR2(30) NULL,
    EXERCISE_TYPE VARCHAR2(300) NULL,
    EQUIPMENT VARCHAR2(300) NULL,
    HEALTH_CONDITION VARCHAR2(300) NULL,
    DAYS_PER_WEEK NUMBER NULL,
    DURATION NUMBER NULL,
    PLAN_DURATION_WEEK NUMBER NULL
);

COMMENT ON COLUMN EXERCISE_PLAN.AI_EXERCISE_NO IS 'AI 플랜 번호';
COMMENT ON COLUMN EXERCISE_PLAN.USER_NO IS '회원 번호';
COMMENT ON COLUMN EXERCISE_PLAN.EXERCISE_GOAL IS '운동 목적';
COMMENT ON COLUMN EXERCISE_PLAN.FITNESS_LEVEL IS '운동 강도';
COMMENT ON COLUMN EXERCISE_PLAN.EXERCISE_TYPE IS '운동 종류';
COMMENT ON COLUMN EXERCISE_PLAN.EQUIPMENT IS '운동 도구';
COMMENT ON COLUMN EXERCISE_PLAN.HEALTH_CONDITION IS '기저 질환';
COMMENT ON COLUMN EXERCISE_PLAN.DAYS_PER_WEEK IS '주간 운동 횟수';
COMMENT ON COLUMN EXERCISE_PLAN.DURATION IS '운동 지속 시간';
COMMENT ON COLUMN EXERCISE_PLAN.PLAN_DURATION_WEEK IS '운동 주간';

-- AI플랜 시퀀스
CREATE SEQUENCE SEQ_AIEXPLAN_NO NOCACHE;

-- AI 운동
CREATE TABLE EXERCISE_SCHEDULE(
    AI_EXERCISE_NO NUMBER NOT NULL,
    EXERCISE_NAME VARCHAR2(300) NULL,
    EQUIPMENT VARCHAR2(300) NULL,
    DURATION NUMBER NULL,
    SETS NUMBER NULL,
    CONSTRAINT FK_EXERCISE_SCHEDULE FOREIGN KEY(AI_EXERCISE_NO) REFERENCES EXERCISE_PLAN(AI_EXERCISE_NO)
);

-- 트레이너 플랜
CREATE TABLE WORKOUT (
    EX_NO NUMBER NOT NULL CONSTRAINT PK_WORKOUT PRIMARY KEY, -- 운동 번호
    USER_ID VARCHAR2(300) NOT NULL, -- 회원 번호
    WORKOUT_TITLE VARCHAR2(3000) NULL, -- 운동 제목
    WORKOUT_DATE DATE DEFAULT SYSDATE NULL, -- 운동일
    WORKOUT_CATEGORY CHAR(3) NULL, -- 운동 종류 (상체: UE, 복부: ABS, 하체: LE)
    DIFFICULTY CHAR(1) NULL, -- 운동 난이도 설정 (L: 낮음, M: 중간, H: 높음)
    DESCRIPTION VARCHAR2(3000) NULL, -- 운동 설명
    WORKOUT_STATUS CHAR(1) DEFAULT 'Y' NULL
);

COMMENT ON COLUMN WORKOUT.EX_NO IS '운동번호';
COMMENT ON COLUMN WORKOUT.USER_ID IS '회원아이디';
COMMENT ON COLUMN WORKOUT.WORKOUT_TITLE IS '운동 제목';
COMMENT ON COLUMN WORKOUT.WORKOUT_DATE IS '운동일';
COMMENT ON COLUMN WORKOUT.WORKOUT_CATEGORY IS '운동종류(상체: UE, 복부: ABS, 하체: LE)';
COMMENT ON COLUMN WORKOUT.DIFFICULTY IS '운동난이도 설정(L: 낮음, M: 중간, H: 높음)';
COMMENT ON COLUMN WORKOUT.DESCRIPTION IS '운동 설명';
COMMENT ON COLUMN WORKOUT.WORKOUT_STATUS IS '운동 데이터 존재 유무(Y: 있음 N:삭제됨)';

-- 트레이너 플랜 시퀀스
CREATE SEQUENCE SEQ_WORKOUT_EX_NO NOCACHE;

-- 회원 운동기록 입력 테이블
CREATE TABLE TN_WORKOUT(
    EX_NO NUMBER NOT NULL CONSTRAINT PK_TN_WORKOUT PRIMARY KEY, -- 운동 번호
    USER_ID VARCHAR2(300) NOT NULL, -- 회원 번호
    WORKOUT_TITLE VARCHAR2(3000) NULL, -- 운동 제목
    WORKOUT_DATE DATE DEFAULT SYSDATE NULL, -- 운동일
    WORKOUT_TARGET VARCHAR2(3000) NULL, -- 운동 종류 (회원이 자유롭게 작성)
    DIFFICULTY CHAR(1) NULL, -- 운동 난이도 설정 (L: 낮음, M: 중간, H: 높음)
    DESCRIPTION VARCHAR2(3000) NULL, -- 운동 설명
    WORKOUT_STATUS CHAR(1) DEFAULT 'Y' NULL
);

COMMENT ON COLUMN TN_WORKOUT.EX_NO IS '운동번호';
COMMENT ON COLUMN TN_WORKOUT.USER_ID IS '회원아이디';
COMMENT ON COLUMN TN_WORKOUT.WORKOUT_TITLE IS '운동 제목';
COMMENT ON COLUMN TN_WORKOUT.WORKOUT_DATE IS '운동일';
COMMENT ON COLUMN TN_WORKOUT.WORKOUT_TARGET IS '운동 표적(회원이 자유롭게 작성)';
COMMENT ON COLUMN TN_WORKOUT.DIFFICULTY IS '운동난이도 설정(L: 낮음, M: 중간, H: 높음)';
COMMENT ON COLUMN TN_WORKOUT.DESCRIPTION IS '운동 설명';
COMMENT ON COLUMN TN_WORKOUT.WORKOUT_STATUS IS '운동 데이터 존재 유무(Y: 있음 N:삭제됨)';

-- 회원이 작성한 플랜 시퀀스
CREATE SEQUENCE SEQ_TN_WORKOUT_EX_NO NOCACHE;

----------------------------멤버십-----------------------------------------------
-- 회원권 테이블 

CREATE TABLE MEMBERSHIP (
   MEMBERSHIP_NO NUMBER CONSTRAINT PK_MEMBERSHIP PRIMARY KEY,
   MEMBERSHIP_LEVEL NUMBER DEFAULT 0 NOT NULL,
   MEMBERSHIP_NAME   VARCHAR2(30) NOT NULL,
   MEMBERSHIP_PERIOD VARCHAR2(30) NOT NULL,
   MEMBERSHIP_DESC   varchar2(3000) NULL
);

COMMENT ON COLUMN MEMBERSHIP.MEMBERSHIP_NO IS '회원권 고유번호';
COMMENT ON COLUMN MEMBERSHIP.MEMBERSHIP_LEVEL IS '0 : 없음 1: 낮은 회원권 2: 중간 회원권 3: 높은 회원권';
COMMENT ON COLUMN MEMBERSHIP.MEMBERSHIP_NAME IS '회원권 이름';
COMMENT ON COLUMN MEMBERSHIP.MEMBERSHIP_PERIOD IS '회원권 기간';
COMMENT ON COLUMN MEMBERSHIP.MEMBERSHIP_DESC IS '회원권 설명';

-- 회원권 고유번호 생성 시퀀스
CREATE SEQUENCE SEQ_MEMBERSHIP NOCACHE;

-- 회원권 신청 테이블
CREATE TABLE MEMBER_APPLICATION (
    APPLICATION_NO NUMBER CONSTRAINT PK_MEMBER_APPLICATION PRIMARY KEY,
    USER_NO NUMBER NOT NULL,
    MEMBERSHIP_NO NUMBER NOT NULL,
    APPLICATION_DATE DATE DEFAULT SYSDATE NOT NULL,
    STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
    CONSTRAINT FK_USER_TO_MEMBER FOREIGN KEY (USER_NO) REFERENCES MEMBER (USER_NO),
    CONSTRAINT FK_MEMBERSHIP_TO_MEMBER FOREIGN KEY (MEMBERSHIP_NO) REFERENCES MEMBERSHIP(MEMBERSHIP_NO)
);

COMMENT ON COLUMN MEMBER_APPLICATION.APPLICATION_NO IS '신청 기록 고유 번호';
COMMENT ON COLUMN MEMBER_APPLICATION.USER_NO IS '회원번호';
COMMENT ON COLUMN MEMBER_APPLICATION.MEMBERSHIP_NO IS '회원권 고유번호';
COMMENT ON COLUMN MEMBER_APPLICATION.APPLICATION_DATE IS '신청 날짜';
COMMENT ON COLUMN MEMBER_APPLICATION.STATUS IS '기간 만료 ''N''';


-- 회원권 신청 고유번호 생성 시퀀스
CREATE SEQUENCE SEQ_MEMBERSHIP_APPLICATION NOCACHE;

----------------------------채팅방----------------------------------------------
CREATE TABLE CHAT_ROOM (
   CH_NO NUMBER CONSTRAINT CHNO_PK   PRIMARY KEY,
   USER_NO   NUMBER REFERENCES MEMBER NOT NULL,
   TRAINER_NO NUMBER REFERENCES MEMBER NOT NULL,
   CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
   STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN ('Y','N'))
);

COMMENT ON COLUMN CHAT_ROOM.CH_NO IS '채팅방번호';
COMMENT ON COLUMN CHAT_ROOM.USER_NO IS '유저테이블참조회원';
COMMENT ON COLUMN CHAT_ROOM.TRAINER_NO IS '유저테이블참조트레이너';
CREATE SEQUENCE SEQ_CHNO NOCACHE;

----------------------------메시지--------------------------------------------
-- 메시지 테이블
CREATE TABLE MESSAGE (
    MSG_NO NUMBER NOT NULL CONSTRAINT PK_MESSAGE PRIMARY KEY,
    MSG_CONTENT VARCHAR2(4000) NOT NULL,
    SEND_DATE DATE DEFAULT SYSDATE NOT NULL,
    CH_NO NUMBER NOT NULL,
    SENDER_NO NUMBER NOT NULL,
    RECEIVER_NO NUMBER NOT NULL,
    MSG_STATUS CHAR(1) DEFAULT 'U' NOT NULL CHECK (MSG_STATUS IN ('U', 'R', 'D', 'E')),
    CONSTRAINT FK_CHATROOM_TO_MESSAGE FOREIGN KEY (CH_NO) REFERENCES CHAT_ROOM (CH_NO),
    CONSTRAINT FK_SENDER_TO_MESSAGE FOREIGN KEY (SENDER_NO) REFERENCES MEMBER (USER_NO),
    CONSTRAINT FK_RECEIVER_TO_MESSAGE FOREIGN KEY (RECEIVER_NO) REFERENCES MEMBER (USER_NO)
);

COMMENT ON COLUMN MESSAGE.MSG_NO IS '메시지번호';
COMMENT ON COLUMN MESSAGE.MSG_CONTENT IS '메시지내용';
COMMENT ON COLUMN MESSAGE.SEND_DATE IS '메시지보낸날짜';
COMMENT ON COLUMN MESSAGE.CH_NO IS '채팅방번호';
COMMENT ON COLUMN MESSAGE.SENDER_NO IS '발신자';
COMMENT ON COLUMN MESSAGE.RECEIVER_NO IS '수신자';
COMMENT ON COLUMN MESSAGE.MSG_STATUS IS '메시지상태(U: 읽지 않음, R: 읽음, D: 배달됨, E: 오류)';

CREATE SEQUENCE SEQ_MESSAGE_NO NOCACHE;

----------------------------회원 일정----------------------------------------------
CREATE TABLE SCHEDULE (
    SCHEDULE_NO NUMBER NOT NULL,                 -- 스케줄 고유번호
    USER_NO NUMBER NOT NULL references member(user_no) , -- 스케줄 보유회원아이디(작성자)
    pt_user varchar2(100) ,                                -- 스케줄 대상자 없으면 개인 스캐줄
    SCHEDULE_TITLE VARCHAR2(100),                -- 스케줄이름
    SCHEDULE_DES VARCHAR2(3000),                 -- 스케줄 내용
    START_DATE varchar2(100),                  -- 시작 날짜
    END_DATE varchar2(100),                     -- 종료날짜
    DOW VARCHAR2(30),                             -- 요일                              
    back_color varchar2(30),                    -- 배경색
    allday varchar2(10),                         -- 종일 일정 여부
    kakao_calendar_id varchar2(100)		  -- 카카오 캘린더 일때 id
);

COMMENT ON COLUMN SCHEDULE.SCHEDULE_NO IS '스케줄 고유번호';
COMMENT ON COLUMN SCHEDULE.USER_NO IS '스케줄 보유회원 아이디';
COMMENT ON COLUMN SCHEDULE.SCHEDULE_TITLE IS '스케줄 이름';
COMMENT ON COLUMN SCHEDULE.SCHEDULE_DES IS '스케줄 내용';
COMMENT ON COLUMN SCHEDULE.START_DATE IS '시작 날짜';
COMMENT ON COLUMN SCHEDULE.END_DATE IS '종료 날짜';
COMMENT ON COLUMN SCHEDULE.DOW IS '요일';
COMMENT ON COLUMN SCHEDULE.BACK_COLOR IS '배경색';
COMMENT ON COLUMN SCHEDULE.ALLDAY IS '종일 일정 여부';
COMMENT ON COLUMN SCHEDULE.pt_user IS '스캐줄 대상자 없으면 개인';
COMMENT ON COLUMN SCHEDULE.kakao_calendar_id IS '스캐줄 대상자 없으면 개인';
create sequence seq_cno nocache;

----------------------------트레이너 정보-------------------------------------------
--- 트레이너 정보
CREATE TABLE trainerInfo (
    user_no NUMBER NOT NULL,                     -- 회원번호
    tr_career NUMBER,                            -- 경력 년수
    tr_certi varchar2(100),                      -- 자격 사항
    tr_profile VARCHAR2(300),                    -- 프로필 경로+파일명
    tr_descript varchar2(1000)                   -- 간략 소개
);

create sequence seq_trainer_info nocache;
--alter table trainerInfo drop column tr_info_no;

----------------------------------채팅 파일--------------------------------------
CREATE TABLE FILE_UPLOAD(
    FILE_NO NUMBER CONSTRAINT PK_FILE PRIMARY KEY, -- 파일 고유 NO
    FILE_NAME VARCHAR2(255) NOT NULL, -- 저장된 파일 이름
    FILE_PATH VARCHAR2(4000) NOT NULL, -- 파일의 저장 경로
    UPLOADED_BY NUMBER NOT NULL, -- 파일을 업로드한 사용자 NO
    UPLOAD_DATE DATE DEFAULT SYSDATE NOT NULL, -- 파일 업로드 날짜
    CONSTRAINT FK_MEMBER_TO_FILE FOREIGN KEY (UPLOADED_BY) REFERENCES MEMBER (USER_NO) ON DELETE CASCADE -- 외래 키 설정
);

COMMENT ON COLUMN FILE_UPLOAD.FILE_NO IS '파일번호';
COMMENT ON COLUMN FILE_UPLOAD.FILE_NAME IS '저장된 파일 이름';
COMMENT ON COLUMN FILE_UPLOAD.FILE_PATH IS '파일경로';
COMMENT ON COLUMN FILE_UPLOAD.UPLOADED_BY IS '파일을 업로드한 사용자';
COMMENT ON COLUMN FILE_UPLOAD.UPLOAD_DATE IS '파일 업로드 날짜';

CREATE SEQUENCE SEQ_FILE_NO NOCACHE; -- 파일 번호를 자동으로 생성하기 위한 시퀀스

commit;